df.sig <- df[ which(df$padj < 0.05 ), ]
df.sig.sorted <- df.sig[ order( df.sig$log2FoldChange ), ]
nrow(df.sig.sorted)
head(df.sig.sorted) # Strongest downregulation from control
tail(df.sig.sorted) # Strongest upregulation from control
#### Getting gene names for http://bioinformatics.psb.ugent.be/webtools/Venn/
write.csv(
x = data.frame(df.sig.sorted, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results-DvsRFZ-DE.05_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
write.csv(
x = data.frame(df.sig.sorted$ensembl, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results-DvsRFZ-DE.05-geneIDs_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
write.csv(
x = data.frame(df.sig.sorted$hgnc_symbol, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results-DvsRFZ-DE.05-hgncSymbol_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
write.csv(
x = data.frame(df.sig.sorted$hgnc_description, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results-DvsRFZ-DE.05-hgncDesc_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
# Reset variable
head(df.sig.sorted)
res.sva.DR.de <- df.sig.sorted
# Set variable
df <- res.sva.NR
# Select for DE genes
sum(df$pvalue < 0.01, na.rm = TRUE)
sum(df$padj < 0.1, na.rm = TRUE) # ~10% as false positives
sum(df$padj < 0.05, na.rm = TRUE) #
# Subsetting to genes that pass FDR threshold and sorting by log2 fold change
df.sig <- df[ which(df$padj < 0.05 ), ]
df.sig.sorted <- df.sig[ order( df.sig$log2FoldChange ), ]
nrow(df.sig.sorted)
head(df.sig.sorted) # Strongest downregulation from control
tail(df.sig.sorted) # Strongest upregulation from control
#### Getting gene names for http://bioinformatics.psb.ugent.be/webtools/Venn/
write.csv(
x = data.frame(df.sig.sorted, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results-NvsRFZ-DE.05_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
write.csv(
x = data.frame(df.sig.sorted$ensembl, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results-NvsRFZ-DE.05-geneIDs_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
write.csv(
x = data.frame(df.sig.sorted$hgnc_symbol, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results-NvsRFZ-DE.05-hgncSymbol_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
write.csv(
x = data.frame(df.sig.sorted$hgnc_description, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results-NvsRFZ-DE.05-hgncDesc_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
# Reset variable
head(df.sig.sorted)
res.sva.NR.de <- df.sig.sorted
# Set variable
df <- res.sva.TR
# Select for DE genes
sum(df$pvalue < 0.01, na.rm = TRUE)
sum(df$padj < 0.1, na.rm = TRUE) # ~10% as false positives
sum(df$padj < 0.05, na.rm = TRUE) #
# Subsetting to genes that pass FDR threshold and sorting by log2 fold change
df.sig <- df[ which(df$padj < 0.05 ), ]
df.sig.sorted <- df.sig[ order( df.sig$log2FoldChange ), ]
nrow(df.sig.sorted)
head(df.sig.sorted) # Strongest downregulation from control
tail(df.sig.sorted) # Strongest upregulation from control
#### Getting gene names for http://bioinformatics.psb.ugent.be/webtools/Venn/
write.csv(
x = data.frame(df.sig.sorted, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results-TvsRFZ-DE.05_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
write.csv(
x = data.frame(df.sig.sorted$ensembl, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results-TvsRFZ-DE.05-geneIDs_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
write.csv(
x = data.frame(df.sig.sorted$hgnc_symbol, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results-TvsRFZ-DE.05-hgncSymbol_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
write.csv(
x = data.frame(df.sig.sorted$hgnc_description, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results-TvsRFZ-DE.05-hgncDesc_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
# Reset variable
head(df.sig.sorted)
res.sva.TR.de <- df.sig.sorted
# Set variable
df <- res.sva.VR
# Select for DE genes
sum(df$pvalue < 0.01, na.rm = TRUE)
sum(df$padj < 0.1, na.rm = TRUE) # ~10% as false positives
sum(df$padj < 0.05, na.rm = TRUE) #
# Subsetting to genes that pass FDR threshold and sorting by log2 fold change
df.sig <- df[ which(df$padj < 0.05 ), ]
df.sig.sorted <- df.sig[ order( df.sig$log2FoldChange ), ]
nrow(df.sig.sorted)
head(df.sig.sorted) # Strongest downregulation from control
tail(df.sig.sorted) # Strongest upregulation from control
#### Getting gene names for http://bioinformatics.psb.ugent.be/webtools/Venn/
write.csv(
x = data.frame(df.sig.sorted, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results-VvsRFZ-DE.05_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
write.csv(
x = data.frame(df.sig.sorted$ensembl, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results-VvsRFZ-DE.05-geneIDs_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
write.csv(
x = data.frame(df.sig.sorted$hgnc_symbol, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results-VvsRFZ-DE.05-hgncSymbol_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
write.csv(
x = data.frame(df.sig.sorted$hgnc_description, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results-VvsRFZ-DE.05-hgncDesc_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
# Reset variable
head(df.sig.sorted)
res.sva.VR.de <- df.sig.sorted
res.sva.DR[res.sva.DR$ensembl %in% "ENSGALG00000007706", ] # Ensembl for FGF8. No hgnc_symbol in genemap!!
# Set variable
df <- res.sva.VR
# Select for DE genes
sum(df$pvalue < 0.01, na.rm = TRUE)
sum(df$padj < 0.1, na.rm = TRUE) # ~10% as false positives
sum(df$padj < 0.05, na.rm = TRUE) #
# Subsetting to genes that pass FDR threshold and sorting by log2 fold change
df.sig <- df[ which(df$padj < 0.05 ), ]
df.sig.sorted <- df.sig[ order( df.sig$log2FoldChange ), ]
nrow(df.sig.sorted)
head(df.sig.sorted) # Strongest downregulation from control
tail(df.sig.sorted) # Strongest upregulation from control
#### Getting gene names for http://bioinformatics.psb.ugent.be/webtools/Venn/
write.csv(
x = data.frame(df.sig.sorted, stringsAsFactors = F),
file = paste0(out.name, "deseq2_V-vs-RFZ_DE.05_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
write.csv(
x = data.frame(df.sig.sorted$ensembl, stringsAsFactors = F),
file = paste0(out.name, "deseq2_V-vs-RFZ_DE.05-geneIDs_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
write.csv(
x = data.frame(df.sig.sorted$hgnc_symbol, stringsAsFactors = F),
file = paste0(out.name, "deseq2_V-vs-RFZ_DE.05-hgncSymbol_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
write.csv(
x = data.frame(df.sig.sorted$hgnc_description, stringsAsFactors = F),
file = paste0(out.name, "deseq2_V-vs-RFZ_DE.05-hgncDesc_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
# Reset variable
head(df.sig.sorted)
res.sva.VR.de <- df.sig.sorted
# Set variable
df <- res.sva.DR
# Select for DE genes
sum(df$pvalue < 0.01, na.rm = TRUE)
sum(df$padj < 0.1, na.rm = TRUE) # ~10% as false positives
sum(df$padj < 0.05, na.rm = TRUE) #
# Subsetting to genes that pass FDR threshold and sorting by log2 fold change
df.sig <- df[ which(df$padj < 0.05 ), ]
df.sig.sorted <- df.sig[ order( df.sig$log2FoldChange ), ]
nrow(df.sig.sorted)
head(df.sig.sorted) # Strongest downregulation from control
tail(df.sig.sorted) # Strongest upregulation from control
#### Getting gene names for http://bioinformatics.psb.ugent.be/webtools/Venn/
write.csv(
x = data.frame(df.sig.sorted, stringsAsFactors = F),
file = paste0(out.name, "deseq2_D-vs-RFZ_DE.05_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
write.csv(
x = data.frame(df.sig.sorted$ensembl, stringsAsFactors = F),
file = paste0(out.name, "deseq2_D-vs-RFZ_DE.05-geneIDs_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
# write.csv(
#     x = data.frame(df.sig.sorted$hgnc_symbol, stringsAsFactors = F),
#     file = paste0(out.name, "deseq2_D-vs-RFZ_DE.05-hgncSymbol_", Sys.Date(), ".csv"),
#     quote = F,
#     row.names = F
# )
#
#
#
# write.csv(
#     x = data.frame(df.sig.sorted$hgnc_description, stringsAsFactors = F),
#     file = paste0(out.name, "deseq2_D-vs-RFZ_DE.05-hgncDesc_", Sys.Date(), ".csv"),
#     quote = F,
#     row.names = F
# )
#
#
# Reset variable
head(df.sig.sorted)
res.sva.DR.de <- df.sig.sorted
# Set variable
df <- res.sva.NR
# Select for DE genes
sum(df$pvalue < 0.01, na.rm = TRUE)
sum(df$padj < 0.1, na.rm = TRUE) # ~10% as false positives
sum(df$padj < 0.05, na.rm = TRUE) #
# Subsetting to genes that pass FDR threshold and sorting by log2 fold change
df.sig <- df[ which(df$padj < 0.05 ), ]
df.sig.sorted <- df.sig[ order( df.sig$log2FoldChange ), ]
nrow(df.sig.sorted)
head(df.sig.sorted) # Strongest downregulation from control
tail(df.sig.sorted) # Strongest upregulation from control
#### Getting gene names for http://bioinformatics.psb.ugent.be/webtools/Venn/
write.csv(
x = data.frame(df.sig.sorted, stringsAsFactors = F),
file = paste0(out.name, "deseq2_N-vs-RFZ_DE.05_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
write.csv(
x = data.frame(df.sig.sorted$ensembl, stringsAsFactors = F),
file = paste0(out.name, "deseq2_N-vs-RFZ_DE.05-geneIDs_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
# write.csv(
#     x = data.frame(df.sig.sorted$hgnc_symbol, stringsAsFactors = F),
#     file = paste0(out.name, "deseq2_D-vs-RFZ_DE.05-hgncSymbol_", Sys.Date(), ".csv"),
#     quote = F,
#     row.names = F
# )
#
#
#
# write.csv(
#     x = data.frame(df.sig.sorted$hgnc_description, stringsAsFactors = F),
#     file = paste0(out.name, "deseq2_D-vs-RFZ_DE.05-hgncDesc_", Sys.Date(), ".csv"),
#     quote = F,
#     row.names = F
# )
#
#
# Reset variable
head(df.sig.sorted)
res.sva.NR.de <- df.sig.sorted
# Set variable
df <- res.sva.TR
# Select for DE genes
sum(df$pvalue < 0.01, na.rm = TRUE)
sum(df$padj < 0.1, na.rm = TRUE) # ~10% as false positives
sum(df$padj < 0.05, na.rm = TRUE) #
# Subsetting to genes that pass FDR threshold and sorting by log2 fold change
df.sig <- df[ which(df$padj < 0.05 ), ]
df.sig.sorted <- df.sig[ order( df.sig$log2FoldChange ), ]
nrow(df.sig.sorted)
head(df.sig.sorted) # Strongest downregulation from control
tail(df.sig.sorted) # Strongest upregulation from control
#### Getting gene names for http://bioinformatics.psb.ugent.be/webtools/Venn/
write.csv(
x = data.frame(df.sig.sorted, stringsAsFactors = F),
file = paste0(out.name, "deseq2_T-vs-RFZ_DE.05_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
write.csv(
x = data.frame(df.sig.sorted$ensembl, stringsAsFactors = F),
file = paste0(out.name, "deseq2_T-vs-RFZ_DE.05-geneIDs_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
# write.csv(
#     x = data.frame(df.sig.sorted$hgnc_symbol, stringsAsFactors = F),
#     file = paste0(out.name, "deseq2_D-vs-RFZ_DE.05-hgncSymbol_", Sys.Date(), ".csv"),
#     quote = F,
#     row.names = F
# )
#
#
#
# write.csv(
#     x = data.frame(df.sig.sorted$hgnc_description, stringsAsFactors = F),
#     file = paste0(out.name, "deseq2_D-vs-RFZ_DE.05-hgncDesc_", Sys.Date(), ".csv"),
#     quote = F,
#     row.names = F
# )
#
#
# Reset variable
head(df.sig.sorted)
res.sva.TR.de <- df.sig.sorted
# Set variable
df <- res.sva.TR
# Select for DE genes
sum(df$pvalue < 0.01, na.rm = TRUE)
sum(df$padj < 0.1, na.rm = TRUE) # ~10% as false positives
sum(df$padj < 0.05, na.rm = TRUE) #
# Subsetting to genes that pass FDR threshold and sorting by log2 fold change
df.sig <- df[ which(df$padj < 0.05 ), ]
df.sig.sorted <- df.sig[ order( df.sig$log2FoldChange ), ]
nrow(df.sig.sorted)
head(df.sig.sorted) # Strongest downregulation from control
tail(df.sig.sorted) # Strongest upregulation from control
#### Getting gene names for http://bioinformatics.psb.ugent.be/webtools/Venn/
write.csv(
x = data.frame(df.sig.sorted, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results_T-vs-RFZ_DE.05_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
write.csv(
x = data.frame(df.sig.sorted$ensembl, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results_T-vs-RFZ_DE.05-geneIDs_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
# write.csv(
#     x = data.frame(df.sig.sorted$hgnc_symbol, stringsAsFactors = F),
#     file = paste0(out.name, "deseq2_D-vs-RFZ_DE.05-hgncSymbol_", Sys.Date(), ".csv"),
#     quote = F,
#     row.names = F
# )
#
#
#
# write.csv(
#     x = data.frame(df.sig.sorted$hgnc_description, stringsAsFactors = F),
#     file = paste0(out.name, "deseq2_D-vs-RFZ_DE.05-hgncDesc_", Sys.Date(), ".csv"),
#     quote = F,
#     row.names = F
# )
#
#
# Reset variable
head(df.sig.sorted)
res.sva.TR.de <- df.sig.sorted
# Set variable
df <- res.sva.DR
# Select for DE genes
sum(df$pvalue < 0.01, na.rm = TRUE)
sum(df$padj < 0.1, na.rm = TRUE) # ~10% as false positives
sum(df$padj < 0.05, na.rm = TRUE) #
# Subsetting to genes that pass FDR threshold and sorting by log2 fold change
df.sig <- df[ which(df$padj < 0.05 ), ]
df.sig.sorted <- df.sig[ order( df.sig$log2FoldChange ), ]
nrow(df.sig.sorted)
head(df.sig.sorted) # Strongest downregulation from control
tail(df.sig.sorted) # Strongest upregulation from control
#### Getting gene names for http://bioinformatics.psb.ugent.be/webtools/Venn/
write.csv(
x = data.frame(df.sig.sorted, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results_D-vs-RFZ_DE.05_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
write.csv(
x = data.frame(df.sig.sorted$ensembl, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results_D-vs-RFZ_DE.05-geneIDs_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
# write.csv(
#     x = data.frame(df.sig.sorted$hgnc_symbol, stringsAsFactors = F),
#     file = paste0(out.name, "deseq2_D-vs-RFZ_DE.05-hgncSymbol_", Sys.Date(), ".csv"),
#     quote = F,
#     row.names = F
# )
#
#
#
# write.csv(
#     x = data.frame(df.sig.sorted$hgnc_description, stringsAsFactors = F),
#     file = paste0(out.name, "deseq2_D-vs-RFZ_DE.05-hgncDesc_", Sys.Date(), ".csv"),
#     quote = F,
#     row.names = F
# )
#
#
# Reset variable
head(df.sig.sorted)
res.sva.DR.de <- df.sig.sorted
# Set variable
df <- res.sva.NR
# Select for DE genes
sum(df$pvalue < 0.01, na.rm = TRUE)
sum(df$padj < 0.1, na.rm = TRUE) # ~10% as false positives
sum(df$padj < 0.05, na.rm = TRUE) #
# Subsetting to genes that pass FDR threshold and sorting by log2 fold change
df.sig <- df[ which(df$padj < 0.05 ), ]
df.sig.sorted <- df.sig[ order( df.sig$log2FoldChange ), ]
nrow(df.sig.sorted)
head(df.sig.sorted) # Strongest downregulation from control
tail(df.sig.sorted) # Strongest upregulation from control
#### Getting gene names for http://bioinformatics.psb.ugent.be/webtools/Venn/
write.csv(
x = data.frame(df.sig.sorted, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results_N-vs-RFZ_DE.05_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
write.csv(
x = data.frame(df.sig.sorted$ensembl, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results_N-vs-RFZ_DE.05-geneIDs_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
# write.csv(
#     x = data.frame(df.sig.sorted$hgnc_symbol, stringsAsFactors = F),
#     file = paste0(out.name, "deseq2_D-vs-RFZ_DE.05-hgncSymbol_", Sys.Date(), ".csv"),
#     quote = F,
#     row.names = F
# )
#
#
#
# write.csv(
#     x = data.frame(df.sig.sorted$hgnc_description, stringsAsFactors = F),
#     file = paste0(out.name, "deseq2_D-vs-RFZ_DE.05-hgncDesc_", Sys.Date(), ".csv"),
#     quote = F,
#     row.names = F
# )
#
#
# Reset variable
head(df.sig.sorted)
res.sva.NR.de <- df.sig.sorted
# Set variable
df <- res.sva.VR
# Select for DE genes
sum(df$pvalue < 0.01, na.rm = TRUE)
sum(df$padj < 0.1, na.rm = TRUE) # ~10% as false positives
sum(df$padj < 0.05, na.rm = TRUE) #
# Subsetting to genes that pass FDR threshold and sorting by log2 fold change
df.sig <- df[ which(df$padj < 0.05 ), ]
df.sig.sorted <- df.sig[ order( df.sig$log2FoldChange ), ]
nrow(df.sig.sorted)
head(df.sig.sorted) # Strongest downregulation from control
tail(df.sig.sorted) # Strongest upregulation from control
#### Getting gene names for http://bioinformatics.psb.ugent.be/webtools/Venn/
write.csv(
x = data.frame(df.sig.sorted, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results_V-vs-RFZ_DE.05_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
write.csv(
x = data.frame(df.sig.sorted$ensembl, stringsAsFactors = F),
file = paste0(out.name, "deseq2-results_V-vs-RFZ_DE.05-geneIDs_", Sys.Date(), ".csv"),
quote = F,
row.names = F
)
# write.csv(
#     x = data.frame(df.sig.sorted$hgnc_symbol, stringsAsFactors = F),
#     file = paste0(out.name, "deseq2_D-vs-RFZ_DE.05-hgncSymbol_", Sys.Date(), ".csv"),
#     quote = F,
#     row.names = F
# )
#
#
#
# write.csv(
#     x = data.frame(df.sig.sorted$hgnc_description, stringsAsFactors = F),
#     file = paste0(out.name, "deseq2_D-vs-RFZ_DE.05-hgncDesc_", Sys.Date(), ".csv"),
#     quote = F,
#     row.names = F
# )
#
#
# Reset variable
head(df.sig.sorted)
res.sva.VR.de <- df.sig.sorted
tail(df.sig.sorted) # Strongest upregulation from control
df.sig.test <- df.sig[ order( df.sig$padj ), ]
tail(df.sig.test)
